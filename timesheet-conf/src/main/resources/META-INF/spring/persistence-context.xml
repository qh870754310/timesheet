<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- Instructs Spring to perfrom declarative transaction managemenet on 
		annotated classes -->
	<tx:annotation-driven />

	<!-- Drives transactions using local JPA APIs -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Creates a EntityManagerFactory for use with the Hibernate JPA provider 
		and a simple in-memory data source populated with test data -->
	<bean id="entityManagerFactory"
		class="org.openkoala.koala.util.KoalaEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="default" /> 
		<property name="packagesToScan">
			<list>
				<value>com.kcfy.techservicemarket.core.domain</value>
                <value>org.openkoala.gqc.core.domain</value>
                <value>org.openkoala.businesslog.model</value>
                <value>org.openkoala.security.core.domain</value>
                <value>org.openkoala.organisation.core.domain</value>
                <value>org.openkoala.security.org.core.domain</value>
                			</list>
		</property>
		<!-- 如果权限使用了不同的数据源，则去掉securitymappings -->
		<property name="scanMappingResourceDir" value="mappings,securitymappings" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="${database.Type}"></property>
				<property name="showSql" value="${hibernate.show_sql}"></property>
				<property name="generateDdl" value="${generateDdl}"></property>
				<property name="databasePlatform" value="${db.jdbc.dialect}"></property>
			</bean>
		</property>
	</bean>

    <bean id="defaultEntityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean" scope="prototype">
        <property name="persistenceUnitName" value="default" />
    </bean>

    <bean id="repository" class="org.openkoala.koala.commons.domain.jpa.KoalaEntityRepositoryJpa">
        <property name="entityManagerName" value="defaultEntityManager"/>
    </bean>

    <bean id="queryChannel" class="org.dayatang.querychannel.impl.QueryChannelServiceImpl">
        <constructor-arg name="repository" ref="repository" />
    </bean>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">   
	    <!-- 基本属性 url、user、password -->  
	    <property name="url" value="${db.jdbc.connection.url}" />  
	    <property name="username" value="${db.jdbc.username}" />  
	    <property name="password" value="${db.jdbc.password}" />  
	        
	    <!-- 配置初始化大小、最小、最大 -->  
	    <property name="initialSize" value="100" />  
	    <property name="minIdle" value="${minimumConnectionCount}" />   
	    <property name="maxActive" value="${maximumConnectionCount}" />  
	   
	    <!-- 配置获取连接等待超时的时间 -->  
	    <property name="maxWait" value="60000" />  
	   
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />  
	   
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
	    <property name="minEvictableIdleTimeMillis" value="300000" />  
	    
	    <property name="validationQuery" value="SELECT 'x'" />  
	    <property name="testWhileIdle" value="true" />  
	    <property name="testOnBorrow" value="false" />  
	    <property name="testOnReturn" value="false" />  
	   
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
	    <property name="poolPreparedStatements" value="true" />  
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />  
	   
	    <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
	    <property name="filters" value="stat" />
	</bean>  
	
	<bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="timeout" value="300" />
		<property name="transactionManager" ref="transactionManager" />
	</bean>
</beans>